import { Фигура } from "../фигура"
import {Точка} from "../абстрактное/точка"
import {ЛинейнаяВеличина, ЛинейнаяЕдиница, КвадратнаяВеличина} from "../../utils/единицыИзмерения"

export class Прямоугольник extends Фигура {
    public width: ЛинейнаяВеличина // ширина в метрах
    public height: ЛинейнаяВеличина // высота в метрах
  
    // Конструктор для чисел и единиц измерения
    constructor(width: number, height: number, unit?: ЛинейнаяЕдиница);
    // Конструктор для готовых линейных величин
    constructor(width: ЛинейнаяВеличина, height: ЛинейнаяВеличина);
    // Реализация конструктора
    constructor(
      wid: number | ЛинейнаяВеличина,
      hei: number | ЛинейнаяВеличина,
      unit: ЛинейнаяЕдиница = "м"
    ) {
      // Подготовка величин если на конструктор переданы number-ы
      const [width, height] = ЛинейнаяВеличина.привестиКВеличинам([wid, hei], unit);
  
      // Проверка единиц и выбор основной
      const основнаяЕдиница = ЛинейнаяВеличина.проверитьОднотипностьЕдиниц(width, height);
  
      // Установка центра фигуры и основнойЕдиницы на суперконструкторе
      super(new Точка(0, 0), основнаяЕдиница);
  
      // Проверка существования
      Прямоугольник.проверитьСуществование(width, height)
  
      // Присваиваем свойства        
      this.width = width
      this.height = height
    }
  
    конвертироватьВЕдиницы(unit: ЛинейнаяЕдиница): Прямоугольник {
      const width = this.width.вЕдиницах(unit);
      const height = this.height.вЕдиницах(unit);
      return new Прямоугольник(width, height);
    }
    площадь(): КвадратнаяВеличина {
      return new КвадратнаяВеличина(
        this.width.val * this.height.val,
        КвадратнаяВеличина.изЛинейнойЕдиницы(this.основнаяЕдиница)
      );
    }
    
    периметр(): ЛинейнаяВеличина {
      return new ЛинейнаяВеличина(
        2 * (this.width.val + this.height.val),
        this.основнаяЕдиница
      );
    }
  }